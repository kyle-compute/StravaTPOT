"""Initial schema with my users, backfilled activites and PRS

Revision ID: 319eecab7cc5
Revises: 
Create Date: 2025-07-14 14:31:02.708565

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '319eecab7cc5'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('strava_athlete_id', sa.BigInteger(), nullable=False),
    sa.Column('username', sa.String(length=255), nullable=True),
    sa.Column('profile_picture_url', sa.String(length=512), nullable=True),
    sa.Column('backfill_status', sa.Enum('PENDING', 'IN_PROGRESS', 'COMPLETED', 'FAILED', name='backfillstatus'), nullable=False),
    sa.Column('backfill_oldest_activity_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_strava_athlete_id'), 'users', ['strava_athlete_id'], unique=True)
    op.create_table('activities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('strava_activity_id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('total_distance_meters', sa.Float(), nullable=True),
    sa.Column('moving_time_seconds', sa.Integer(), nullable=True),
    sa.Column('total_elevation_gain_meters', sa.Float(), nullable=True),
    sa.Column('activity_start_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'strava_activity_id', name='uq_user_strava_activity')
    )
    op.create_index(op.f('ix_activities_strava_activity_id'), 'activities', ['strava_activity_id'], unique=False)
    op.create_index(op.f('ix_activities_user_id'), 'activities', ['user_id'], unique=False)
    op.create_table('strava_authorizations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('access_token', sa.String(length=512), nullable=False),
    sa.Column('refresh_token', sa.String(length=512), nullable=False),
    sa.Column('token_expires_at', sa.DateTime(), nullable=False),
    sa.Column('scopes', sa.String(length=512), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('activity_best_efforts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('activity_id', sa.Integer(), nullable=False),
    sa.Column('distance', sa.Enum('METER_400', 'METER_800', 'KM_1', 'MILE_1', 'KM_5', 'KM_10', 'HALF_MARATHON', 'MARATHON', name='prdistance'), nullable=False),
    sa.Column('elapsed_time_seconds', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['activity_id'], ['activities.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_activity_best_efforts_activity_id'), 'activity_best_efforts', ['activity_id'], unique=False)
    op.create_table('personal_records',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('source_activity_id', sa.Integer(), nullable=False),
    sa.Column('distance', sa.Enum('METER_400', 'METER_800', 'KM_1', 'MILE_1', 'KM_5', 'KM_10', 'HALF_MARATHON', 'MARATHON', name='prdistance'), nullable=False),
    sa.Column('elapsed_time_seconds', sa.Integer(), nullable=False),
    sa.Column('achieved_on', sa.Date(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['source_activity_id'], ['activities.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'distance', name='uq_user_distance_pr')
    )
    op.create_index(op.f('ix_personal_records_user_id'), 'personal_records', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_personal_records_user_id'), table_name='personal_records')
    op.drop_table('personal_records')
    op.drop_index(op.f('ix_activity_best_efforts_activity_id'), table_name='activity_best_efforts')
    op.drop_table('activity_best_efforts')
    op.drop_table('strava_authorizations')
    op.drop_index(op.f('ix_activities_user_id'), table_name='activities')
    op.drop_index(op.f('ix_activities_strava_activity_id'), table_name='activities')
    op.drop_table('activities')
    op.drop_index(op.f('ix_users_strava_athlete_id'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
